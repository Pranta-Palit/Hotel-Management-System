/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com;
import java.text.SimpleDateFormat;  
import java.util.Date;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.Statement;
import javax.swing.JOptionPane;
import oracle.jdbc.OraclePreparedStatement;
import oracle.jdbc.OracleResultSet;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.*;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.text.ParseException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Joy
 */
public class Room extends javax.swing.JFrame {

    String Email;
    
      Connection conn = null;
    //OraclePreparedStatement pst = null;
    OracleResultSet rs = null;
    /**
     * Creates new form Room
     */
    public Room(String nEmail) {
        Email = nEmail;
        
        initComponents();
        refresh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        room_table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        Room_No = new javax.swing.JTextField();
        cust_Mobile = new javax.swing.JTextField();
        cust_Name2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 0, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        room_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "R_NO", "R_LOCATION", "R_RENT", "R_TYPE", "R_STATUS", "REFEREED_MANAGER"
            }
        ));
        jScrollPane1.setViewportView(room_table);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 750, 170));

        jButton1.setText("Book");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 340, 140, -1));
        jPanel1.add(Room_No, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 270, 140, 30));
        jPanel1.add(cust_Mobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 230, 140, 30));
        jPanel1.add(cust_Name2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 190, 140, 30));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Room No");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 270, 80, 30));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Mobile No");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 80, 30));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Customer Name");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 190, 80, 30));

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 320, 100, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 430));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private static java.sql.Timestamp getCurrentTimeStamp() throws ParseException {

	java.util.Date today = new java.util.Date();
	return new java.sql.Timestamp(today.getTime());
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
        conn = JavaConnectivity.ConnecrDb();
        
        java.sql.Timestamp t = getCurrentTimeStamp();
        
        PreparedStatement pst = conn.prepareStatement("UPDATE CUSTOMER SET MY_ROOM = ?, CHECK_IN_TIME = ? WHERE C_MOBILENO = ?");
        PreparedStatement pst1 = conn.prepareStatement("UPDATE ROOM SET REFEREED_MANAGER = ?, C_NAME = ?, C_MOBILENO = ?, R_STATUS = ? WHERE R_NO = ?");
        
        PreparedStatement pst2 = conn.prepareStatement("INSERT INTO HISTORY (R_NO , CUSTOMER_NAME , CUSTOMER_MOB , CHECK_IN_TIME, CHECK_OUT_TIME, Reference) VALUES (?, ?, ?, ?, ?, ?)");

        pst.setString(1,Room_No.getText());
        pst.setString(2,t.toString());
        pst.setString(3,cust_Mobile.getText());
        
        pst1.setString(1,Email);
        pst1.setString(2,cust_Name2.getText());
        pst1.setString(3,cust_Mobile.getText());
        pst1.setString(4,"Not Available");
        pst1.setString(5,Room_No.getText());
        
        pst2.setString(1,Room_No.getText());
        pst2.setString(2,cust_Name2.getText());
        pst2.setString(3,cust_Mobile.getText());
        pst2.setString(4,t.toString());
        pst2.setString(5,"NULL");
        pst2.setString(6,Email);
        
        pst.executeUpdate();
        
        pst1.executeUpdate();
       
        pst2.executeUpdate();
        
        
        pst.close();
        pst1.close();
        pst2.close();
        
        conn.close();
        
        
        JOptionPane.showMessageDialog(null, "Room Booked!");
        refresh();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "UPDATE FAILED");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        if(new Login().status==1)
        {
            Choice c = new Choice(Email);
            c.setVisible(true);
        }
        else if(new Login().status==2)
        {
            Manager_Profile mp = new Manager_Profile(Email);
            mp.setVisible(true);
        }
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
private void refresh(){
                                             
        try {
            conn = JavaConnectivity.ConnecrDb();
            //Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=MISHU;integratedSecurity=true");

            Statement statement = conn.createStatement();
            
            ResultSet rs = statement.executeQuery("select * from ROOM ");
            //ResultSet rs2 = statement.executeQuery("select * from RECEPTIONIST ");
            ResultSetMetaData  rsmetadata = rs.getMetaData();
            int  columns = rsmetadata.getColumnCount();
            DefaultTableModel dtm = new DefaultTableModel();
            Vector columns_name=new Vector();
            Vector data_rows=new Vector();
            for(int  i= 1; i < columns+1; i++)
            {
                columns_name.addElement (rsmetadata.getColumnLabel(i));
            }

            dtm.setColumnIdentifiers(columns_name);
            while (rs.next())
            {
                data_rows = new Vector();
                for (int j = 1; j <columns+1; j++)
                {
                    data_rows.addElement(rs.getString(j)) ;
                }
                dtm.addRow(data_rows);

            }
            room_table.setModel(dtm);
            //r_table.setModel(dtm);
                     
            
            //pst.executeUpdate();
        
        //pst.close();
        conn.close();
        

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Room("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Room_No;
    private javax.swing.JTextField cust_Mobile;
    private javax.swing.JTextField cust_Name2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable room_table;
    // End of variables declaration//GEN-END:variables
}
